import json
import boto3
import http.client
import re
# Create an S3 client outside of the lambda_handler function
def lambda_handler(event, context):
    bucket_name = event['Records'][0]['s3']['bucket']['name']
    object_key = event['Records'][0]['s3']['object']['key']
    textract_client = boto3.client('textract')
    
    # Start text detection job
    response = textract_client.start_document_text_detection(
        DocumentLocation={
            'S3Object': {
                'Bucket': bucket_name,
                'Name': object_key
            }
        }
    )
    job_id = response['JobId']
    print(f'Textract job started. Job ID: {job_id}')

    # Wait for the Textract job to complete
    while True:
        job_status = textract_client.get_document_text_detection(JobId=job_id)
        status = job_status['JobStatus']
        
        if status in ['SUCCEEDED', 'FAILED']:
            break
    print(job_status['Blocks'])
    extracted_content=''
    if status == 'SUCCEEDED':
        lines = []
        for block in job_status['Blocks']:
            if block['BlockType'] == 'LINE':
                lines.append(block['Text'])
        
        print("Extracted Lines:")
        for line in lines:
            # print(line)
            extracted_content= f"{extracted_content}\n" + f"{line}\n"
        print(extracted_content)
        
        
        pattern = r'(\d+)---'
        print(event)
        print(object_key)
        # Search for the pattern in the input string
        match = re.search(pattern, object_key)
        chat_id = match.group(1)
        
        dynamodb_client = boto3.resource('dynamodb')
        dynamo_table = dynamodb_client.Table('cscTable')
        data={
            'id': object_key,
            'extracted_text':extracted_content
        }
        table_name='cscTable'
        response = dynamo_table.put_item(Item=data)
        response=send_telegram_message(chat_id,extracted_content)
        return response
        
    
    return "Failed to extract text. Try Again"
    
    
def send_telegram_message(chat_id, text):
    
    telegram_bot_token = "7198297284:AAGf3qGjfUyQ0ZjjoffJbcZTmcVLlcntIho"
    host = "api.telegram.org"
    path = f"/bot{telegram_bot_token}/sendMessage"

    connection = http.client.HTTPSConnection(host)
    
    headers = {"Content-type": "application/json"}
    payload = {
        "chat_id": chat_id,
        "text": text
    }

    connection.request("POST", path, body=json.dumps(payload), headers=headers)
    response = connection.getresponse()

    # Read and print the response
    response_data = response.read().decode("utf-8")
    print(response_data)

    connection.close()
    return response_data